<html>
<head>

<script type="text/javascript" src="http://maps.google.com/maps/api/js?sensor=false"></script>
<script src="https://maps.googleapis.com/maps/api/js?v=3.exp&signed_in=true&libraries=geometry"></script>
</head>
<body onLoad="goma()">
<div id="mappy" style="width:900px; height:550px;"></div>

<script>
var map, ren, ser;
var data = {};
function goma()
{
map = new google.maps.Map( document.getElementById('mappy'),
 {'zoom':12,
 'mapTypeId': google.maps.MapTypeId.ROADMAP,
 'center': new google.maps.LatLng(26.05678288577881, -80.30236816615798) })

	ren = new google.maps.DirectionsRenderer( {'draggable':true} );
	ren.setMap(map);
	ser = new google.maps.DirectionsService();
	fetchdata()
}

function setroute(os)
{
	var wp = [];
	for(var i=0;i<os.waypoints.length;i++)
		wp[i] = {'location': new google.maps.LatLng(os.waypoints[i][0], os.waypoints[i][1]),'stopover':false }
		//wp[0] = {'location': new google.maps.LatLng(os.waypoints[0][0], os.waypoints[0][1]),'stopover':false }
		//wp[1] = {'location': new google.maps.LatLng(26.40106, -80.38343),'stopover':false }
	
		//wp.push({'location': new google.maps.LatLng(26.10106, -80.38343),'stopover':false });
	
	ser.route({'origin':new google.maps.LatLng(os.start.lat,os.start.lng),
	'destination':new google.maps.LatLng(os.end.lat,os.end.lng),
	'waypoints': wp,	
	'travelMode': google.maps.DirectionsTravelMode.DRIVING,
	'unitSystem': google.maps.DirectionsUnitSystem.METRIC
	
	},function(res,sts) {
		if(sts=='OK')ren.setDirections(res);
		
		//calculate distance
		var distance="";
		 for (i = 0; i < res.routes[0].legs.length; i++) {         
		  distance += res.routes[0].legs[i].distance.text; 
        }
		//var distance = res.routes[0].legs[0].distance.text; 
		//var time_taken = res.routes[0].legs[0].duration.text;
		//var calc_distance = res.routes[0].legs[0].distance.value; 
		alert(distance);
		
		//url = "http://maps.googleapis.com/maps/api/directions/json?origin=" + 26.1048858 + "," + 80.39231649999999 + "&destination=" + 25.9416076 + "," + 80.16158410000003 + "&waypoints=" + 26.0748696 +","+-80.3152642999999726.0739837 + "&sensor=true";
		
		var pointsArray = [];
		//overview_path contains an array of LatLngs that represent an approximate (smoothed) path of the resulting directions.
		pointsArray = res.routes[0].overview_path;
		//overview_polyline contains a single points object that holds an encoded polyline representation of the route. This polyline is an approximate (smoothed) path of the resulting directions.
		//pointsArray = res.routes[0].overview_polyline;
		
		alert(pointsArray.length);	
		
		
		/*for (var a = 0; a < pointsArray.length; a++) {			
			if (pointsArray[a] === 26.10106, -80.38343) {
				alert('Value exist');
				break;
			}
		}*/
		
		for (var a = 0; a < pointsArray.length; a++) {	
			var point1 = new google.maps.Marker ({
			position:pointsArray[a],
			draggable:true,
			map:map,
			flat:true
			});
		}
		/*
		var one= new google.maps.LatLng(25.618380000000002, 85.14838);
		var two=  new google.maps.LatLng(25.487420000000004, 85.10033000000001);
		var three =  new google.maps.LatLng(25.252550000000003, 85.00477000000001);
		
			var point1 = new google.maps.Marker ({
			position:one,
			draggable:true,
			map:map,
			flat:true
			});
			var point1 = new google.maps.Marker ({
			position:two,
			draggable:true,
			map:map,
			flat:true
			});
			var point1 = new google.maps.Marker ({
			position:three,
			draggable:true,
			map:map,
			flat:true
			});
	
		*/
		
		var shortest_distance = null;
		var hold_latlng;
		var latLngA = new google.maps.LatLng(25.417966225103243, 85.09477615356445);
		for (var j = 0; j < pointsArray.length; j++) {
			//var latLngA = new LatLng(25.574343378470164, 85.21957397460938);
			
			var distance =  google.maps.geometry.spherical.computeDistanceBetween(latLngA, pointsArray[j]);
			
			if (shortest_distance == null || distance < shortest_distance) {
				shortest_distance = distance;
				if(j>3)
				{
					hold_latlng=pointsArray[j-1] +":"+ pointsArray[j]+":"+ pointsArray[j+1];
					//hold_latlng=pointsArray[j];
				}
			}
			
			

			
		}
		
		//alert( "C="+ google.maps.geometry.spherical.interpolate(latLngA, hold_latlng, 0.7 ));
		  
		alert(shortest_distance/1000);
		alert(hold_latlng);//25.618380000000002, 85.14838):(25.487420000000004, 85.10033000000001):(25.252550000000003, 85.00477000000001
		/*
		var myRoute = res.routes[0].legs[0];
		alert(myRoute.steps.length);
		for (var i = 0; i < myRoute.steps.length; i++) {			
			var point1 = new google.maps.Marker ({
			position:myRoute.steps[i].start_point,
			draggable:true,
			map:map,
			flat:true
			});
		}*/

		//=======================//
		
	})	
	
	var cascadiaFault = new google.maps.Polyline({
			paths: [
			  new google.maps.LatLng(25.618380000000002, 85.14838),
			  new google.maps.LatLng(25.487420000000004, 85.10033000000001),
			  new google.maps.LatLng(25.252550000000003, 85.00477000000001)	
			]
		  });
		  var myPosition = new google.maps.LatLng(25.457689876799606, 85.09357452392578);
		  //var myPosition = new google.maps.LatLng(25.3974113626792, 85.0667953491211 );
		  //var myPosition = new google.maps.LatLng(25.618380000000002, 85.14838);
		  //alert(myPosition);
		  //alert(cascadiaFault);
		  //alert(google.maps.geometry.poly.isLocationOnEdge(myPosition, cascadiaFault));
		  if (google.maps.geometry.poly.isLocationOnEdge(myPosition, cascadiaFault, 0.05)) {
			alert("Relocate!");
		  }
		  else
		  {
			alert("locate!");
		  }
		 
	 var polyline2 = new google.maps.Polyline();
	 polyline2.getPath().push(new google.maps.LatLng(25.618380000000002, 85.14838));
	 polyline2.getPath().push(new google.maps.LatLng(25.487420000000004, 85.10033000000001));
	 polyline2.getPath().push(new google.maps.LatLng(25.252550000000003, 85.00477000000001));
	 var element = new google.maps.LatLng(25.414904053710586, 85.23811340332031);
	if (google.maps.geometry.poly.isLocationOnEdge(element, polyline2, 0.05)) {
		//console.log(element + " on edge");
		alert("on edge");
	} else {
		//console.log(element + " not on edge");
		alert("Not on edge");
	}
	
}

function fetchdata()
{
	var jax = window.XMLHttpRequest ? new XMLHttpRequest() : new ActiveXObject('Microsoft.XMLHTTP');
	jax.open('POST','process.php');
	jax.setRequestHeader('Content-Type','application/x-www-form-urlencoded');
	jax.send('command=fetch')
	jax.onreadystatechange = function(){ if(jax.readyState==4) {		
		try { setroute( eval('(' + jax.responseText + ')') ); }
		catch(e){ alert(e); }
	}}
}
</script>
</body>
</html>